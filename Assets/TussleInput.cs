//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/TussleInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TussleInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TussleInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TussleInput"",
    ""maps"": [
        {
            ""name"": ""Fighter"",
            ""id"": ""3a4f017f-0e26-4a44-a050-c43980f9bb28"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""df542677-68a9-4deb-b031-8160d2214692"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Smash"",
                    ""type"": ""Value"",
                    ""id"": ""0075fab4-b5aa-47f4-8b0a-ec6706a897b0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CStick"",
                    ""type"": ""Value"",
                    ""id"": ""5fdb2abd-87b0-4994-a71d-726531c4b36f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""45298fdf-2ac0-4c5b-a552-0d4fa9c21bc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special"",
                    ""type"": ""Button"",
                    ""id"": ""88703a83-f29c-4533-8535-a1cf359afc99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6c6dd3b1-062c-4ccd-aff4-67c064fb98c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shield"",
                    ""type"": ""Button"",
                    ""id"": ""8131f524-05b8-4e9c-9be8-fdf4056111b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""e54420f0-7751-4293-88ba-f19879cd0106"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""46a2912a-b6a3-4a61-a934-72810ea06290"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""7e1f8604-a797-40bb-9999-95902403c6ec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ddccd663-5b68-4425-b7e2-9d7b6c8d4db0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8ffb0998-babf-42ba-86ec-d4dfd09e42ad"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bd7e9f5b-b473-47bf-8ba4-3a543d22e103"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6b71dbe5-0bbe-47a5-b86d-1d47ea0cc43e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f1db3700-db00-464e-9f72-185b53f24d2e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10593a6b-1446-4d05-ac9c-82fca6c0bb2a"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae736fbb-f860-4a47-b08a-abba0d7f7d83"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1e8f8a7-1fd4-4562-abcb-3d23cbbfd0e1"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab398d81-4c3d-4a08-9e23-7991a01cbe77"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb980f06-e7c4-45a7-a9e3-f8325dc44228"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""651f670a-0f95-461d-ac6d-357b96a3a771"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a139bb2f-6c52-489d-a580-f4bcbea9c02f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""725aaec0-3c1f-4bee-bda2-5196950c7cdd"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9337e57b-9a2d-4244-a7f3-0a17ad39cc3d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13aae49b-588e-4ce8-9f4e-4b65b28849e9"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75c5746d-a4d4-4ae7-a7dd-4dc81770b946"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3a136ba-f480-41f6-9325-f8398215a4e4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4500387a-43f3-4309-9044-4c9c1786da7b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""701be721-0449-4d21-b632-d103437f6ca3"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Smash(duration=0.05,deadZone=0.1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Smash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Fighter
        m_Fighter = asset.FindActionMap("Fighter", throwIfNotFound: true);
        m_Fighter_Move = m_Fighter.FindAction("Move", throwIfNotFound: true);
        m_Fighter_Smash = m_Fighter.FindAction("Smash", throwIfNotFound: true);
        m_Fighter_CStick = m_Fighter.FindAction("CStick", throwIfNotFound: true);
        m_Fighter_Attack = m_Fighter.FindAction("Attack", throwIfNotFound: true);
        m_Fighter_Special = m_Fighter.FindAction("Special", throwIfNotFound: true);
        m_Fighter_Jump = m_Fighter.FindAction("Jump", throwIfNotFound: true);
        m_Fighter_Shield = m_Fighter.FindAction("Shield", throwIfNotFound: true);
        m_Fighter_Grab = m_Fighter.FindAction("Grab", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Fighter
    private readonly InputActionMap m_Fighter;
    private IFighterActions m_FighterActionsCallbackInterface;
    private readonly InputAction m_Fighter_Move;
    private readonly InputAction m_Fighter_Smash;
    private readonly InputAction m_Fighter_CStick;
    private readonly InputAction m_Fighter_Attack;
    private readonly InputAction m_Fighter_Special;
    private readonly InputAction m_Fighter_Jump;
    private readonly InputAction m_Fighter_Shield;
    private readonly InputAction m_Fighter_Grab;
    public struct FighterActions
    {
        private @TussleInput m_Wrapper;
        public FighterActions(@TussleInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Fighter_Move;
        public InputAction @Smash => m_Wrapper.m_Fighter_Smash;
        public InputAction @CStick => m_Wrapper.m_Fighter_CStick;
        public InputAction @Attack => m_Wrapper.m_Fighter_Attack;
        public InputAction @Special => m_Wrapper.m_Fighter_Special;
        public InputAction @Jump => m_Wrapper.m_Fighter_Jump;
        public InputAction @Shield => m_Wrapper.m_Fighter_Shield;
        public InputAction @Grab => m_Wrapper.m_Fighter_Grab;
        public InputActionMap Get() { return m_Wrapper.m_Fighter; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FighterActions set) { return set.Get(); }
        public void SetCallbacks(IFighterActions instance)
        {
            if (m_Wrapper.m_FighterActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnMove;
                @Smash.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnSmash;
                @Smash.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnSmash;
                @Smash.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnSmash;
                @CStick.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnCStick;
                @CStick.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnCStick;
                @CStick.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnCStick;
                @Attack.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnAttack;
                @Special.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnSpecial;
                @Special.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnSpecial;
                @Special.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnSpecial;
                @Jump.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnJump;
                @Shield.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnShield;
                @Shield.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnShield;
                @Shield.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnShield;
                @Grab.started -= m_Wrapper.m_FighterActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_FighterActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_FighterActionsCallbackInterface.OnGrab;
            }
            m_Wrapper.m_FighterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Smash.started += instance.OnSmash;
                @Smash.performed += instance.OnSmash;
                @Smash.canceled += instance.OnSmash;
                @CStick.started += instance.OnCStick;
                @CStick.performed += instance.OnCStick;
                @CStick.canceled += instance.OnCStick;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Special.started += instance.OnSpecial;
                @Special.performed += instance.OnSpecial;
                @Special.canceled += instance.OnSpecial;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Shield.started += instance.OnShield;
                @Shield.performed += instance.OnShield;
                @Shield.canceled += instance.OnShield;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
            }
        }
    }
    public FighterActions @Fighter => new FighterActions(this);
    public interface IFighterActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSmash(InputAction.CallbackContext context);
        void OnCStick(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnSpecial(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShield(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
    }
}
